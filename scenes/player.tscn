[gd_scene load_steps=10 format=3 uid="uid://ctco84i7vf467"]

[ext_resource type="PackedScene" uid="uid://dmd30i0n880jl" path="res://scenes/guns/drobovik.tscn" id="1_qhqgy"]
[ext_resource type="PackedScene" uid="uid://cv7f00gumo58s" path="res://scenes/guns/spray.tscn" id="2_dqkch"]
[ext_resource type="PackedScene" uid="uid://csssvs7nb38am" path="res://scenes/ui.tscn" id="2_g2els"]
[ext_resource type="AudioStream" uid="uid://bf6186cxxuqmc" path="res://sounds/nou-nou-nou-mr-fish.mp3" id="3_qhqgy"]
[ext_resource type="PackedScene" uid="uid://bqun6j64boy61" path="res://scenes/guns/Svabra.tscn" id="3_qlg0r"]

[sub_resource type="GDScript" id="GDScript_qhqgy"]
resource_name = "player"
script/source = "extends CharacterBody3D

@export var SPEED := 5.5
@export var JUMP_VELOCITY := 4.5
@export var mouse_sensitivity := 0.1
@export var gravity := 12 
@export var MASS_KG = 80.0

var jumps = 2
var jump_on_wall = false

var Sprint = false

@onready var camera_pivot := $cam
@onready var camera := $cam/Camera3D

@onready var fresh_light: SpotLight3D = $cam/Fresh_Light

func _ready():
	GScript.VsyncSet()
	var Settings_values = SaveConfigScript.load_game_setings()
	$cam/Camera3D.fov = int(Settings_values[\"Fov\"])
	print(Settings_values)
	$UI/FPS_LABEL_COUNTER.visible = Settings_values[\"FPS-Visibility\"]
	mouse_sensitivity = float(Settings_values[\"Mouse Sensitivity\"]) / 500
	$cam/Camera3D.attributes.exposure_multiplier = float(Settings_values[\"Brightness\"]) / 50
	# Захват мыши
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func  _process(delta: float) -> void:
	if global_position.y < -90:
		global_position = Vector3(0, 30, 0)
		$Audio/Mr_FishAudio.play()
	
	if Input.is_action_just_pressed(\"f\"):
		fresh_light.visible = not fresh_light.visible

func _input(event):
	# Управление камерой мышью
	if event is InputEventMouseMotion and !GScript.UI_opened:
		# Горизонтальный поворот персонажа
		rotate_y(deg_to_rad(-event.relative.x * mouse_sensitivity))
	
		# Вертикальный поворот камеры
		camera_pivot.rotate_x(deg_to_rad(-event.relative.y * mouse_sensitivity))
		camera_pivot.rotation.x = clamp(
			camera_pivot.rotation.x,
			deg_to_rad(-90),  # Ограничение угла обзора
			deg_to_rad(90)   # чтобы камера не переворачивалась
		)
		
func push_away_rigid_bodies(): #взято с ютуба
	for i in get_slide_collision_count():
		var c := get_slide_collision(i)
		if c.get_collider() is RigidBody3D:
			var push_dir = -c.get_normal()
			# How much velocity the object needs to increase to match player velocity in the push direction
			var velocity_diff_in_push_dir = self.velocity.dot(push_dir) - c.get_collider().linear_velocity.dot(push_dir)
			# Only count velocity towards push dir, away from character
			velocity_diff_in_push_dir = max(0., velocity_diff_in_push_dir)
			# Objects with more mass than us should be harder to push. But doesn't really make sense to push faster than we are going
			var mass_ratio = min(1., MASS_KG / c.get_collider().mass)
			# Optional add: Don't push object at all if it's 4x heavier or more
			if mass_ratio < 0.25:
				continue
			# Don't push object from above/below
			push_dir.y = 0
			# 5.0 is a magic number, adjust to your needs
			var push_force = mass_ratio * 5.0
			c.get_collider().apply_impulse(push_dir * velocity_diff_in_push_dir * push_force, c.get_position() - c.get_collider().global_position)


func _physics_process(delta: float) -> void:
	if Input.is_action_just_pressed(\"ctrl\"):
		if Sprint:
			SPEED -= 2.5
		else:
			SPEED += 2.5
		
		Sprint = not Sprint
	
	if is_on_floor() and jumps < 2:
		jumps = 2
	elif is_on_wall() and jumps == 0 and not jump_on_wall:
		jump_on_wall = true
		jumps = 1
  
	if not is_on_wall() and jump_on_wall:
		jump_on_wall = false
	
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\"):
		if jumps > 0:
			velocity.y = JUMP_VELOCITY
			jumps -= 1
			
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"a\", \"d\", \"w\", \"s\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction and !GScript.UI_opened:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)
		
	push_away_rigid_bodies()
	move_and_slide()
"

[sub_resource type="CameraAttributesPractical" id="CameraAttributesPractical_qhqgy"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_a5w7b"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_u8vuu"]

[node name="player" type="CharacterBody3D"]
wall_min_slide_angle = 1.11003
script = SubResource("GDScript_qhqgy")
SPEED = 5.0

[node name="cam" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.6, 0)

[node name="Camera3D" type="Camera3D" parent="cam"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.000151142)
attributes = SubResource("CameraAttributesPractical_qhqgy")
fov = 60.0

[node name="Fresh_Light" type="SpotLight3D" parent="cam"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0279883, 0)
visible = false
light_energy = 3.909
spot_range = 7.52155
spot_angle = 22.5459

[node name="guns" type="Node3D" parent="cam"]

[node name="Drobovik" parent="cam/guns" instance=ExtResource("1_qhqgy")]
transform = Transform3D(9.22717e-05, -0.0999978, 0.000665243, -0.0272199, -0.00066524, -0.0962218, 0.0962241, -9.22931e-05, -0.0272199, 0.470098, -0.373263, -0.399693)
skeleton = NodePath("../..")

[node name="Spray" parent="cam/guns" instance=ExtResource("2_dqkch")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0.428473, -0.325949, -0.755738)
visible = false

[node name="Svabra" parent="cam/guns" instance=ExtResource("3_qlg0r")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0.427342, -0.324847, -0.642617)
visible = false

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_a5w7b")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_u8vuu")

[node name="obj_spawner" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.500727, -2.46443)

[node name="UI" parent="." instance=ExtResource("2_g2els")]

[node name="Audio" type="Node" parent="."]

[node name="Mr_FishAudio" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("3_qhqgy")
