[gd_scene load_steps=5 format=3 uid="uid://dq0tbv0q8kyqv"]

[sub_resource type="GDScript" id="GDScript_sciqk"]
script/source = "extends CharacterBody3D

var dir

func _ready() -> void:
	dir = (global_transform.basis.z.normalized() * -0.65) + (global_transform.basis.y.normalized() * -0.001)
	await get_tree().create_timer(3).timeout
	queue_free()

func _physics_process(_delta: float):
	global_transform = global_transform.orthonormalized()
	var move = move_and_collide(dir)
	if move:
		var collider = move.get_collider()
		if collider is RigidBody3D and \"Shar\" in collider.name:
			collider.apply_central_impulse(dir * 15)
		elif collider is RigidBody3D:
			collider.apply_central_impulse(dir * 20)
		if collider.has_method('on_bullet'):
			collider.on_bullet()
		queue_free()
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ds4j2"]
albedo_color = Color(0.113046, 0.113046, 0.113046, 1)
metallic_specular = 0.0

[sub_resource type="SphereMesh" id="SphereMesh_r481e"]

[sub_resource type="SphereShape3D" id="SphereShape3D_qge6c"]
radius = 0.020619

[node name="bullet" type="CharacterBody3D"]
script = SubResource("GDScript_sciqk")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(0.04, 0, 0, 0, 0.04, 0, 0, 0, 0.04, 0, 0, 0)
material_override = SubResource("StandardMaterial3D_ds4j2")
mesh = SubResource("SphereMesh_r481e")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("SphereShape3D_qge6c")
